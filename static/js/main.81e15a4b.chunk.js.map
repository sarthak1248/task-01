{"version":3,"sources":["constant.js","reducer.js","store.js","components/ClickButton.js","incrementCounter.js","components/DisplayCard.js","App.js","index.js"],"names":["COUNTER_INCREMENT","COUNTER_RESET","counterReducer","state","count","action","type","reducer","combineReducers","counter","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ClickButton","dispatch","useDispatch","onClick","a","error","DisplayCard","useSelector","App","className","ReactDOM","render","document","getElementById"],"mappings":"iLAAaA,EAAoB,oBACpBC,EAAgB,gBCYdC,EAXe,WAAmC,IAAlCC,EAAiC,uDAAzB,CAAEC,MAAO,GAAKC,EAAW,uCAC5D,OAAQA,EAAOC,MACjB,KAAKN,EACJ,MAAO,CAAEI,MAAOD,EAAMC,MAAQ,GAC/B,KAAKH,EACJ,MAAO,CAAEG,MAAO,GACjB,QACC,OAAOD,ICHJI,EAAUC,0BAAgB,CAC/BC,QAASP,IAIJQ,EAAa,CAACC,KAMLC,EALDC,sBACbN,EACAO,8BAAoBC,kBAAe,WAAf,EAAmBL,K,+BCFzBM,EARY,WACvB,IAAMC,EAAWC,cAEjB,OACI,wBAAQC,QAAS,kBAAMF,ECNN,uCAAM,WAAMA,GAAN,SAAAG,EAAA,sDAC3B,IACIH,EAAS,CAAEX,KAAMN,IACnB,MAAOqB,GACLJ,EAAS,CACLX,KAAML,IALa,2CAAN,wDDMjB,uBEIOqB,EATY,WACvB,IACQlB,EADQmB,aAAY,SAAApB,GAAK,OAAIA,EAAMM,WACnCL,MAER,OACI,6BAAKA,K,MCMEoB,MATf,WACE,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,YAAf,SAA2B,cAAC,EAAD,MAC3B,qBAAKA,UAAU,YAAf,SAA2B,cAAC,EAAD,UCHjCC,IAASC,OACP,cAAC,IAAD,CAAUf,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFgB,SAASC,eAAe,W","file":"static/js/main.81e15a4b.chunk.js","sourcesContent":["export const COUNTER_INCREMENT = \"COUNTER_INCREMENT\"\nexport const COUNTER_RESET = \"COUNTER_RESET\"","import { COUNTER_INCREMENT, COUNTER_RESET } from './constant'\n\nexport const counterReducer = (state = { count: 0 }, action) => {\n    switch (action.type) {\n\t\tcase COUNTER_INCREMENT:\n\t\t\treturn { count: state.count + 1 };\n\t\tcase COUNTER_RESET:\n\t\t\treturn { count: 0 };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default counterReducer","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport counterReducer from \"./reducer\";\n\n\nconst reducer = combineReducers({\n\tcounter: counterReducer\n});\n\n\nconst middleware = [thunk];\nconst store = createStore(\n\treducer,\n\tcomposeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { increment } from '../incrementCounter'\n\nexport const ClickButton = () => {\n    const dispatch = useDispatch()\n\n    return (\n        <button onClick={() => dispatch(increment())}>click me</button>\n    )\n}\n\nexport default ClickButton","import { COUNTER_INCREMENT, COUNTER_RESET } from \"./constant\"\n\nexport const increment = () => async(dispatch) => {\n    try {       \n        dispatch({ type: COUNTER_INCREMENT })   \n    } catch (error) {\n        dispatch({ \n            type: COUNTER_RESET, \n        })\n    }\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport const DisplayCard = () => {\n    const counter = useSelector(state => state.counter)\n    const { count } = counter\n\n    return (\n        <h1>{count}</h1>\n    )\n}\n\nexport default DisplayCard","import React from \"react\"\nimport ClickButton from \"./components/ClickButton\"\nimport DisplayCard from \"./components/DisplayCard\"\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <div className=\"grid-container\">\n      <div className=\"grid-item\"><ClickButton /></div>\n      <div className=\"grid-item\"><DisplayCard /></div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}